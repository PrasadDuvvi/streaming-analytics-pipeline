{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "(SO0014)- Streaming Analytics Pipeline: this template adds an additional external destination to an existing Amazon Kinesis Analytics application.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Amazon Kinesis Analytics Configuration"
                    },
                    "Parameters": [
                        "ApplicationName",
                        "InAppDestStream",
                        "ExternalDestination",
                        "EncryptData"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon Redshift Destination Configuration"
                    },
                    "Parameters": [
                        "MasterUser",
                        "MasterUserPassword",
                        "RedshiftJDBCURL",
                        "RedshiftTableName",
                        "RedshiftColumns",
                        "RedshiftBufferInterval",
                        "RedshiftBufferSize"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon Elasticsearch Destination Configuration"
                    },
                    "Parameters": [
                        "ESDomain",
                        "ESIndex",
                        "ESType",
                        "ESIndexRotation",
                        "ESBufferInterval",
                        "ESBufferSize"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon S3 Destination Configuration"
                    },
                    "Parameters": [
                        "S3BufferInterval",
                        "S3BufferSize",
                        "S3DestinationPrefix"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon Kinesis Stream Destination Configuration"
                    },
                    "Parameters": [
                        "DestinationStream"
                    ]
                }
            ],
            "ParameterLabels": {
                "ApplicationName": {
                    "default": "Application Name"
                },
                "InAppDestStream": {
                    "default": "In-application Output Stream Name"
                },
                "ExternalDestination": {
                    "default": "External Destination"
                },
                "EncryptData": {
                    "default": "Encrypt Data at Rest?"
                },
                "MasterUser": {
                    "default": "Master User Name"
                },
                "MasterUserPassword": {
                    "default": "Master User Password"
                },
                "RedshiftJDBCURL": {
                    "default": "JDBC URL"
                },
                "RedshiftTableName": {
                    "default": "Table Name"
                },
                "RedshiftColumns": {
                    "default": "Column Pattern"
                },
                "RedshiftBufferInterval": {
                    "default": "Buffer Interval"
                },
                "RedshiftBufferSize": {
                    "default": "Buffer Size"
                },
                "ESDomain": {
                    "default": "Domain Name"
                },
                "ESIndex": {
                    "default": "Index Name"
                },
                "ESType": {
                    "default": "Type Name"
                },
                "ESIndexRotation": {
                    "default": "Index Rotation"
                },
                "ESBufferInterval": {
                    "default": "Buffer Interval"
                },
                "ESBufferSize": {
                    "default": "Buffer Size"
                },
                "S3BufferInterval": {
                    "default": "Buffer Interval"
                },
                "S3BufferSize": {
                    "default": "Buffer Size"
                },
                "S3DestinationPrefix": {
                    "default": "Destination Prefix"
                },
                "DestinationStream": {
                    "default": "Destination Stream Name"
                }
            }
        }
    },
    "Parameters": {
        "ApplicationName": {
            "Description": "Name of your existing Amazon Kinesis Analytics application.",
            "Type": "String"
        },
        "InAppDestStream": {
            "Description": "Name of in-application output stream.",
            "Type": "String",
            "Default": "DESTINATION_SQL_STREAM_002"
        },
        "S3DestinationPrefix": {
            "Description": "Name of prefix where the aggregated data will be stored.",
            "Type": "String",
            "Default": "AggregatedData"
        },
        "ExternalDestination": {
            "Description": "Select a destination for your aggregated data.",
            "Type": "String",
            "AllowedValues": [
                "Amazon Redshift",
                "Amazon ElasticSearch Service",
                "Amazon S3",
                "Amazon Kinesis Stream"
            ]
        },
        "S3BufferInterval": {
            "Description": "Number of seconds to buffer data before delivering to S3 (60 to 900).",
            "Type": "Number",
            "Default": 300,
            "MinValue": 60,
            "MaxValue": 900
        },
        "S3BufferSize": {
            "Description": "Number of MB of data to buffer before delivering to S3 (1 to 128).",
            "Type": "Number",
            "Default": 5,
            "MinValue": 1,
            "MaxValue": 128
        },
        "EncryptData": {
            "Description": "Would you like to encrypt the data as it leaves your Kinesis Analytics application.",
            "Type": "String",
            "AllowedValues": [
                "yes",
                "no"
            ]
        },
        "ESDomain": {
            "Description": "Name of the destination Amazon Elasticsearch Domain.",
            "Type": "String"
        },
        "ESIndex": {
            "Description": "Index name of the Amazon ElasticSearch Domain.",
            "Type": "String"
        },
        "ESType": {
            "Description": "Name of the Amazon ElasticSearch type.",
            "Type": "String"
        },
        "ESIndexRotation": {
            "Description": "Frequency at which the Amazon ElasticSearch index will be rotated.",
            "Type": "String",
            "AllowedValues": [
                "NoRotation",
                "OneHour",
                "OneDay",
                "OneWeek",
                "OneMonth"
            ],
            "Default": "NoRotation"
        },
        "ESBufferInterval": {
            "Description": "Number of seconds to buffer data before delivering to S3 to be copied to ElasticSearch (60 to 900).",
            "Type": "Number",
            "Default": 300,
            "MinValue": 60,
            "MaxValue": 900
        },
        "ESBufferSize": {
            "Description": "Number of MB of data to buffer before delivering to S3 to be copied to ElasticSearch (1 to 100).",
            "Type": "Number",
            "Default": 5,
            "MinValue": 1,
            "MaxValue": 100
        },
        "MasterUserPassword": {
            "Description": "Master user password of your preexisting Redshift cluster",
            "NoEcho": "true",
            "Type": "String"
        },
        "MasterUser": {
            "Description": "Name of the master user of the preexisting Redshift Cluster",
            "Type": "String"
        },
        "RedshiftBufferInterval": {
            "Description": "Number of seconds to buffer data before delivering to S3 (60 to 900).",
            "Type": "Number",
            "Default": 300,
            "MinValue": 60,
            "MaxValue": 900
        },
        "RedshiftBufferSize": {
            "Description": "Number of MB of data to buffer before delivering to S3 (1 to 128).",
            "Type": "Number",
            "Default": 5,
            "MinValue": 1,
            "MaxValue": 128
        },
        "RedshiftJDBCURL": {
            "Description": "URL to connect to the cluster database with the JDBC client",
            "Type": "String"
        },
        "RedshiftTableName": {
            "Description": "Name of table in preexisting Redshift Cluster",
            "Type": "String"
        },
        "RedshiftColumns": {
            "Description": "Comma-separated list of the columns in the destination Redshift table.",
            "Type": "String"
        },
        "DestinationStream": {
            "Description": "Name of the existing destination Kinesis Stream",
            "Type": "String"
        }
    },
    "Mappings": {},
    "Conditions": {
        "NeedS3Bucket": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ExternalDestination"
                        },
                        "Amazon Redshift"
                    ]
                },
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ExternalDestination"
                        },
                        "Amazon ElasticSearch Service"
                    ]
                },
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ExternalDestination"
                        },
                        "Amazon S3"
                    ]
                }
            ]
        },
        "EncryptData": {
            "Fn::Equals": [
                {
                    "Ref": "EncryptData"
                },
                "yes"
            ]
        },
        "NoEncryption": {
            "Fn::Equals": [
                {
                    "Ref": "EncryptData"
                },
                "no"
            ]
        },
        "RedshiftDestination": {
            "Fn::Equals": [
                {
                    "Ref": "ExternalDestination"
                },
                "Amazon Redshift"
            ]
        },
        "ElasticsearchDestination": {
            "Fn::Equals": [
                {
                    "Ref": "ExternalDestination"
                },
                "Amazon ElasticSearch Service"
            ]
        },
        "S3Destination": {
            "Fn::Equals": [
                {
                    "Ref": "ExternalDestination"
                },
                "Amazon S3"
            ]
        },
        "StreamDestination": {
            "Fn::Equals": [
                {
                    "Ref": "ExternalDestination"
                },
                "Amazon Kinesis Stream"
            ]
        }
    },
    "Resources": {
        "EncryptionKey": {
            "Type": "AWS::KMS::Key",
            "Condition": "EncryptData",
            "Properties": {
                "Description": "KMS key generated to encrypt aggregated Kinesis Analytics data.",
                "EnableKeyRotation": "true",
                "KeyPolicy": {
                    "Id": "KMS key policy",
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "Enable IAM User Permissions",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": [
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:iam::",
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                ":root"
                                            ]
                                        ]
                                    }
                                ]
                            },
                            "Action": "kms:*",
                            "Resource": "*"
                        },
                        {
                            "Sid": "Allow access for Key Administrators",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": []
                            },
                            "Action": [
                                "kms:Create*",
                                "kms:Describe*",
                                "kms:Enable*",
                                "kms:List*",
                                "kms:Put*",
                                "kms:Update*",
                                "kms:Revoke*",
                                "kms:Disable*",
                                "kms:Get*",
                                "kms:Delete*",
                                "kms:ScheduleKeyDeletion",
                                "kms:CancelKeyDeletion"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Sid": "Allow use of the key",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": []
                            },
                            "Action": [
                                "kms:Encrypt",
                                "kms:Decrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*",
                                "kms:DescribeKey"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Sid": "Allow attachment of persistent resources",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": []
                            },
                            "Action": [
                                "kms:CreateGrant",
                                "kms:ListGrants",
                                "kms:RevokeGrant"
                            ],
                            "Resource": "*",
                            "Condition": {
                                "Bool": {
                                    "kms:GrantIsForAWSResource": true
                                }
                            }
                        }
                    ]
                }
            }
        },
        "KMSAlias": {
            "Type": "AWS::KMS::Alias",
            "Condition": "EncryptData",
            "Properties": {
                "AliasName": {
                    "Fn::Join": [
                        "",
                        [
                            "alias/key-",
                            {
                                "Ref": "AWS::StackName"
                            }
                        ]
                    ]
                },
                "TargetKeyId": {
                    "Fn::GetAtt": [
                        "EncryptionKey",
                        "Arn"
                    ]
                }
            }
        },
        "StreamingAnalyticsBucket": {
            "Type": "AWS::S3::Bucket",
            "Condition": "NeedS3Bucket"
        },
        "FIrehoseToS3Role": {
            "Type": "AWS::IAM::Role",
            "Condition": "S3Destination",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "firehose.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Condition": {
                                "StringEquals": {
                                    "sts:ExternalId": {
                                        "Ref": "AWS::AccountId"
                                    }
                                }
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "",
                                [
                                    "Firehose-to-S3-Delivery-",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "",
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:AbortMultipartUpload",
                                        "s3:GetBucketLocation",
                                        "s3:GetObject",
                                        "s3:ListBucket",
                                        "s3:ListBucketMultipartUploads",
                                        "s3:PutObject"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "StreamingAnalyticsBucket"
                                                    }
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "StreamingAnalyticsBucket"
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "kms:Decrypt",
                                        "kms:GenerateDataKey"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::If": [
                                                "NoEncryption",
                                                {
                                                    "Fn::Join": [
                                                        "",
                                                        [
                                                            "arn:aws:kms:",
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            ":",
                                                            {
                                                                "Ref": "AWS::AccountId"
                                                            },
                                                            ":key/placeholder-kms-id"
                                                        ]
                                                    ]
                                                },
                                                {
                                                    "Fn::GetAtt": [
                                                        "EncryptionKey",
                                                        "Arn"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "Condition": {
                                        "StringEquals": {
                                            "kms:ViaService": {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "s3.",
                                                        {
                                                            "Ref": "AWS::Region"
                                                        },
                                                        ".amazonaws.com"
                                                    ]
                                                ]
                                            }
                                        },
                                        "StringLike": {
                                            "kms:EncryptionContext:aws:s3:arn": {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "arn:aws:s3:::",
                                                        {
                                                            "Ref": "StreamingAnalyticsBucket"
                                                        },
                                                        "/",
                                                        {
                                                            "Ref": "S3DestinationPrefix"
                                                        },
                                                        "/*"
                                                    ]
                                                ]
                                            }
                                        }
                                    }
                                },
                                {
                                    "Sid": "",
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "FIrehoseToS3": {
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Condition": "S3Destination",
            "Properties": {
                "S3DestinationConfiguration": {
                    "BucketARN": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:s3:::",
                                {
                                    "Ref": "StreamingAnalyticsBucket"
                                }
                            ]
                        ]
                    },
                    "BufferingHints": {
                        "IntervalInSeconds": {
                            "Ref": "S3BufferInterval"
                        },
                        "SizeInMBs": {
                            "Ref": "S3BufferSize"
                        }
                    },
                    "CompressionFormat": "UNCOMPRESSED",
                    "EncryptionConfiguration": {
                        "KMSEncryptionConfig": {
                            "Fn::If": [
                                "NoEncryption",
                                {
                                    "Ref": "AWS::NoValue"
                                },
                                {
                                    "AWSKMSKeyARN": {
                                        "Fn::GetAtt": [
                                            "EncryptionKey",
                                            "Arn"
                                        ]
                                    }
                                }
                            ]
                        },
                        "NoEncryptionConfig": {
                            "Fn::If": [
                                "NoEncryption",
                                "NoEncryption",
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        }
                    },
                    "Prefix": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "S3DestinationPrefix"
                                },
                                "/"
                            ]
                        ]
                    },
                    "RoleARN": {
                        "Fn::GetAtt": [
                            "FIrehoseToS3Role",
                            "Arn"
                        ]
                    }
                }
            }
        },
        "ElasticSearchDeliveryRole": {
            "Type": "AWS::IAM::Role",
            "Condition": "ElasticsearchDestination",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "firehose.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Condition": {
                                "StringEquals": {
                                    "sts:ExternalId": {
                                        "Ref": "AWS::AccountId"
                                    }
                                }
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "",
                                [
                                    "Firehose-to-ElasticSearch-Delivery-",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "",
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:AbortMultipartUpload",
                                        "s3:GetBucketLocation",
                                        "s3:GetObject",
                                        "s3:ListBucket",
                                        "s3:ListBucketMultipartUploads",
                                        "s3:PutObject"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "StreamingAnalyticsBucket"
                                                    }
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "StreamingAnalyticsBucket"
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "kms:Decrypt",
                                        "kms:GenerateDataKey"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::If": [
                                                "NoEncryption",
                                                {
                                                    "Fn::Join": [
                                                        "",
                                                        [
                                                            "arn:aws:kms:",
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            ":",
                                                            {
                                                                "Ref": "AWS::AccountId"
                                                            },
                                                            ":key/placeholder-kms-id"
                                                        ]
                                                    ]
                                                },
                                                {
                                                    "Fn::GetAtt": [
                                                        "EncryptionKey",
                                                        "Arn"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "Condition": {
                                        "StringEquals": {
                                            "kms:ViaService": {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "s3.",
                                                        {
                                                            "Ref": "AWS::Region"
                                                        },
                                                        ".amazonaws.com"
                                                    ]
                                                ]
                                            }
                                        },
                                        "StringLike": {
                                            "kms:EncryptionContext:aws:s3:arn": {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "arn:aws:s3:::",
                                                        {
                                                            "Ref": "StreamingAnalyticsBucket"
                                                        },
                                                        "/ESDeliveryBackup/*"
                                                    ]
                                                ]
                                            }
                                        }
                                    }
                                },
                                {
                                    "Sid": "",
                                    "Effect": "Allow",
                                    "Action": [
                                        "es:DescribeElasticsearchDomain",
                                        "es:DescribeElasticsearchDomains",
                                        "es:DescribeElasticsearchDomainConfig",
                                        "es:ESHttpPost",
                                        "es:ESHttpPut"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:es:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":domain/",
                                                    {
                                                        "Ref": "ESDomain"
                                                    }
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:es:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":domain/",
                                                    {
                                                        "Ref": "ESDomain"
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Sid": "",
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "FIrehoseToElasticsearch": {
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Condition": "ElasticsearchDestination",
            "Properties": {
                "ElasticsearchDestinationConfiguration": {
                    "BufferingHints": {
                        "IntervalInSeconds": {
                            "Ref": "ESBufferInterval"
                        },
                        "SizeInMBs": {
                            "Ref": "ESBufferSize"
                        }
                    },
                    "DomainARN": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:es:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":domain/",
                                {
                                    "Ref": "ESDomain"
                                }
                            ]
                        ]
                    },
                    "IndexName": {
                        "Ref": "ESIndex"
                    },
                    "IndexRotationPeriod": {
                        "Ref": "ESIndexRotation"
                    },
                    "RetryOptions": {
                        "DurationInSeconds": 300
                    },
                    "RoleARN": {
                        "Fn::GetAtt": [
                            "ElasticSearchDeliveryRole",
                            "Arn"
                        ]
                    },
                    "S3BackupMode": "AllDocuments",
                    "S3Configuration": {
                        "BucketARN": {
                            "Fn::Join": [
                                "",
                                [
                                    "arn:aws:s3:::",
                                    {
                                        "Ref": "StreamingAnalyticsBucket"
                                    }
                                ]
                            ]
                        },
                        "BufferingHints": {
                            "IntervalInSeconds": {
                                "Ref": "ESBufferInterval"
                            },
                            "SizeInMBs": {
                                "Ref": "ESBufferSize"
                            }
                        },
                        "CompressionFormat": "UNCOMPRESSED",
                        "EncryptionConfiguration": {
                            "KMSEncryptionConfig": {
                                "Fn::If": [
                                    "NoEncryption",
                                    {
                                        "Ref": "AWS::NoValue"
                                    },
                                    {
                                        "AWSKMSKeyARN": {
                                            "Fn::GetAtt": [
                                                "EncryptionKey",
                                                "Arn"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "NoEncryptionConfig": {
                                "Fn::If": [
                                    "NoEncryption",
                                    "NoEncryption",
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        },
                        "Prefix": "ESDeliveryBackup/",
                        "RoleARN": {
                            "Fn::GetAtt": [
                                "ElasticSearchDeliveryRole",
                                "Arn"
                            ]
                        }
                    },
                    "TypeName": {
                        "Ref": "ESType"
                    }
                }
            }
        },
        "RedshiftDeliveryRole": {
            "Type": "AWS::IAM::Role",
            "Condition": "RedshiftDestination",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "firehose.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Condition": {
                                "StringEquals": {
                                    "sts:ExternalId": {
                                        "Ref": "AWS::AccountId"
                                    }
                                }
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "",
                                [
                                    "Firehose-to-Redshift-Delivery-",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "",
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:AbortMultipartUpload",
                                        "s3:GetBucketLocation",
                                        "s3:GetObject",
                                        "s3:ListBucket",
                                        "s3:ListBucketMultipartUploads",
                                        "s3:PutObject"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "StreamingAnalyticsBucket"
                                                    }
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "StreamingAnalyticsBucket"
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "kms:Decrypt",
                                        "kms:GenerateDataKey"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::If": [
                                                "NoEncryption",
                                                {
                                                    "Fn::Join": [
                                                        "",
                                                        [
                                                            "arn:aws:kms:",
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            ":",
                                                            {
                                                                "Ref": "AWS::AccountId"
                                                            },
                                                            ":key/placeholder-kms-id"
                                                        ]
                                                    ]
                                                },
                                                {
                                                    "Fn::GetAtt": [
                                                        "EncryptionKey",
                                                        "Arn"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "Condition": {
                                        "StringEquals": {
                                            "kms:ViaService": {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "s3.",
                                                        {
                                                            "Ref": "AWS::Region"
                                                        },
                                                        ".amazonaws.com"
                                                    ]
                                                ]
                                            }
                                        },
                                        "StringLike": {
                                            "kms:EncryptionContext:aws:s3:arn": {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "arn:aws:s3:::",
                                                        {
                                                            "Ref": "StreamingAnalyticsBucket"
                                                        },
                                                        "/RedshiftDelivery/*"
                                                    ]
                                                ]
                                            }
                                        }
                                    }
                                },
                                {
                                    "Sid": "",
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "FIrehoseToRedshift": {
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Condition": "RedshiftDestination",
            "Properties": {
                "RedshiftDestinationConfiguration": {
                    "ClusterJDBCURL": {
                        "Ref": "RedshiftJDBCURL"
                    },
                    "CopyCommand": {
                        "CopyOptions": "delimiter ','",
                        "DataTableColumns": {
                            "Ref": "RedshiftColumns"
                        },
                        "DataTableName": {
                            "Ref": "RedshiftTableName"
                        }
                    },
                    "Password": {
                        "Ref": "MasterUserPassword"
                    },
                    "RoleARN": {
                        "Fn::GetAtt": [
                            "RedshiftDeliveryRole",
                            "Arn"
                        ]
                    },
                    "S3Configuration": {
                        "BucketARN": {
                            "Fn::Join": [
                                "",
                                [
                                    "arn:aws:s3:::",
                                    {
                                        "Ref": "StreamingAnalyticsBucket"
                                    }
                                ]
                            ]
                        },
                        "RoleARN": {
                            "Fn::GetAtt": [
                                "RedshiftDeliveryRole",
                                "Arn"
                            ]
                        },
                        "BufferingHints": {
                            "IntervalInSeconds": {
                                "Ref": "RedshiftBufferInterval"
                            },
                            "SizeInMBs": {
                                "Ref": "RedshiftBufferSize"
                            }
                        },
                        "CompressionFormat": "UNCOMPRESSED",
                        "EncryptionConfiguration": {
                            "KMSEncryptionConfig": {
                                "Fn::If": [
                                    "NoEncryption",
                                    {
                                        "Ref": "AWS::NoValue"
                                    },
                                    {
                                        "AWSKMSKeyARN": {
                                            "Fn::GetAtt": [
                                                "EncryptionKey",
                                                "Arn"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "NoEncryptionConfig": {
                                "Fn::If": [
                                    "NoEncryption",
                                    "NoEncryption",
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        },
                        "Prefix": "RedshiftDelivery/"
                    },
                    "Username": {
                        "Ref": "MasterUser"
                    }
                }
            }
        },
        "NewOutputRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "kinesisanalytics.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "",
                                [
                                    "OutputRole-",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "WriteOutputFirehose",
                                    "Effect": "Allow",
                                    "Action": [
                                        "firehose:DescribeDeliveryStream",
                                        "firehose:PutRecord",
                                        "firehose:PutRecordBatch"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::If": [
                                                "RedshiftDestination",
                                                {
                                                    "Fn::Join": [
                                                        "",
                                                        [
                                                            "arn:aws:firehose:",
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            ":",
                                                            {
                                                                "Ref": "AWS::AccountId"
                                                            },
                                                            ":deliverystream/",
                                                            {
                                                                "Ref": "FIrehoseToRedshift"
                                                            }
                                                        ]
                                                    ]
                                                },
                                                {
                                                    "Ref": "AWS::NoValue"
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::If": [
                                                "S3Destination",
                                                {
                                                    "Fn::Join": [
                                                        "",
                                                        [
                                                            "arn:aws:firehose:",
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            ":",
                                                            {
                                                                "Ref": "AWS::AccountId"
                                                            },
                                                            ":deliverystream/",
                                                            {
                                                                "Ref": "FIrehoseToS3"
                                                            }
                                                        ]
                                                    ]
                                                },
                                                {
                                                    "Ref": "AWS::NoValue"
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::If": [
                                                "ElasticsearchDestination",
                                                {
                                                    "Fn::Join": [
                                                        "",
                                                        [
                                                            "arn:aws:firehose:",
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            ":",
                                                            {
                                                                "Ref": "AWS::AccountId"
                                                            },
                                                            ":deliverystream/",
                                                            {
                                                                "Ref": "FIrehoseToElasticsearch"
                                                            }
                                                        ]
                                                    ]
                                                },
                                                {
                                                    "Ref": "AWS::NoValue"
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::If": [
                                                "StreamDestination",
                                                {
                                                    "Fn::Join": [
                                                        "",
                                                        [
                                                            "arn:aws:kinesis:",
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            ":",
                                                            {
                                                                "Ref": "AWS::AccountId"
                                                            },
                                                            ":stream/kinesis-analytics-placeholder-stream-destination"
                                                        ]
                                                    ]
                                                },
                                                {
                                                    "Ref": "AWS::NoValue"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Sid": "WriteOutputKinesis",
                                    "Effect": "Allow",
                                    "Action": [
                                        "kinesis:DescribeStream",
                                        "kinesis:PutRecord",
                                        "kinesis:PutRecords"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::If": [
                                                "StreamDestination",
                                                {
                                                    "Fn::Join": [
                                                        "",
                                                        [
                                                            "arn:aws:kinesis:",
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            ":",
                                                            {
                                                                "Ref": "AWS::AccountId"
                                                            },
                                                            ":stream/",
                                                            {
                                                                "Ref": "DestinationStream"
                                                            }
                                                        ]
                                                    ]
                                                },
                                                {
                                                    "Fn::Join": [
                                                        "",
                                                        [
                                                            "arn:aws:kinesis:",
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            ":",
                                                            {
                                                                "Ref": "AWS::AccountId"
                                                            },
                                                            ":stream/kinesis-analytics-placeholder-stream-destination"
                                                        ]
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "AddKAOutputFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Ref": "AWS::AccountId"
                                }
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "",
                                [
                                    "Lambda-addKAOutput-",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "kinesisanalytics:AddApplicationOutput",
                                        "kinesisanalytics:DeleteApplicationOutput",
                                        "kinesisanalytics:DescribeApplication"
                                    ],
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:kinesisanalytics:",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                ":application/",
                                                {"Ref": "ApplicationName"}
                                            ]
                                        ]
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:PassRole"
                                    ],
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "NewOutputRole",
                                            "Arn"
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "AddKAOutputFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {"Fn::Join": ["", [
                        "solutions-",
                        {"Ref": "AWS::Region"}
                    ]]},
                    "S3Key": "streaming-analytics/v1/add-output-code.zip"
                },
                "Description": "This function adds an external destination to an existing Kinesis Analytics application",
                "Handler": "add_output.lambda_handler",
                "MemorySize": "128",
                "Role": {
                    "Fn::GetAtt": [
                        "AddKAOutputFunctionRole",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7",
                "Timeout": "30"
            }
        },
        "AddOutput": {
            "Type": "Custom::AddApplicationOutput",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "AddKAOutputFunction",
                        "Arn"
                    ]
                },
                "FunctionName": {"Ref": "AddKAOutputFunction"},
                "Region": {"Ref": "AWS::Region"},
                "AppName": {"Ref": "ApplicationName"},
                "OutputRole": {"Fn::GetAtt": ["NewOutputRole","Arn"]},
                "Destination": {"Ref": "ExternalDestination"},
                "DestinationStreamName": {"Ref": "InAppDestStream"},
                "RedshiftDest": {
                    "Fn::If": [
                        "RedshiftDestination",
                        {
                            "Fn::Join": [
                                "",
                                [
                                    "arn:aws:firehose:",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                        "Ref": "AWS::AccountId"
                                    },
                                    ":deliverystream/",
                                    {
                                        "Ref": "FIrehoseToRedshift"
                                    }
                                ]
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "S3Dest": {
                    "Fn::If": [
                        "S3Destination",
                        {
                            "Fn::Join": [
                                "",
                                [
                                    "arn:aws:firehose:",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                        "Ref": "AWS::AccountId"
                                    },
                                    ":deliverystream/",
                                    {
                                        "Ref": "FIrehoseToS3"
                                    }
                                ]
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "ElasticsearchDest": {
                    "Fn::If": [
                        "ElasticsearchDestination",
                        {
                            "Fn::Join": [
                                "",
                                [
                                    "arn:aws:firehose:",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                        "Ref": "AWS::AccountId"
                                    },
                                    ":deliverystream/",
                                    {
                                        "Ref": "FIrehoseToElasticsearch"
                                    }
                                ]
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "StreamDest": {
                    "Fn::If": [
                        "StreamDestination",
                        {
                            "Fn::Join": [
                                "",
                                [
                                    "arn:aws:kinesis:",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                        "Ref": "AWS::AccountId"
                                    },
                                    ":stream/",
                                    {
                                        "Ref": "DestinationStream"
                                    }
                                ]
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                }
            }
        }
    },
    "Outputs": {
        "OutputBucket": {
            "Description": "Data will be stored in this Amazon S3 bucket",
            "Condition": "NeedS3Bucket",
            "Value": {
                "Ref": "StreamingAnalyticsBucket"
            }
        },
        "KMSKey": {
            "Description": "Data will be encrypted with this Amazon KMS encryption key",
            "Value": {
                "Ref": "KMSAlias"
            },
            "Condition": "EncryptData"
        },
        "DestStream": {
            "Description": "Data will flow from this in-application stream to your new external destination",
            "Value": {
                "Ref": "InAppDestStream"
            }
        }
    }
}